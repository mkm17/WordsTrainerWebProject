@model WordsTrainerWeb.Models.Word

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Word</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.LabelFor(model => model.homeLanguage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(
                    x => x.homeLanguage.id,
                    new SelectList(ViewBag.Languages, "id", "name"),
                    new { htmlAttributes = new { @class = "form-control" } }
                )
                @Html.ValidationMessageFor(model => model.homeLanguage, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.homeText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.homeText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.homeText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.foreignLanguage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(
                    x => x.foreignLanguage.id,
                    new SelectList(ViewBag.Languages, "id", "name"),
                    new { htmlAttributes = new { @class = "form-control" } }
                )
                @Html.ValidationMessageFor(model => model.foreignLanguage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.foreignText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.foreignText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.foreignText, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.partOfSpeach, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(
                    x => x.partOfSpeach.id,
                    new SelectList(ViewBag.PartOfSpeech, "id", "name"),
                    new { htmlAttributes = new { @class = "form-control" } }
                )
                @Html.ValidationMessageFor(model => model.partOfSpeach, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(
                    x => x.category.id,
                    new SelectList(ViewBag.Categories, "id", "name"),
                    new { htmlAttributes = new { @class = "form-control" } }
                )
                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
